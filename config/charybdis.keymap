#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <120>;
    flavor = "balanced";
    quick-tap-ms = <90>;
    require-prior-idle-ms = <50>;
    hold-trigger-on-release;
    hold-trigger-key-positions = <31 34 29>;
};

&mt {
    quick-tap-ms = <100>;
    require-prior-idle-ms = <50>;
    flavor = "balanced";
    hold-trigger-key-positions = <11 12 13 16 17 18 19 10 11>;
    hold-trigger-on-release;
    tapping-term-ms = <150>;
};

/ {
    // #define BASE    0
    // #define LOWER   1
    // #define RAISE   2
    // #define MEDIA   3
    // #define CHANGE  4

    combos {
        compatible = "zmk,combos";

        LH.Lclick {
            bindings = <&mkp LCLK>;
            key-positions = <23 22>;
            layers = <0 3>;
        };

        LH.Rclick {
            bindings = <&mkp RCLK>;
            key-positions = <22 21>;
            layers = <0 3>;
        };

        LH.Mclick {
            bindings = <&mkp MB3>;
            key-positions = <21 22 23>;
            layers = <0 3>;
        };

        OSM_Shift {
            bindings = <&sf_shift LSHFT>;
            key-positions = <29 28>;
            layers = <0>;
        };

        CHG {
            bindings = <&to 3>;
            key-positions = <32 33>;
            layers = <0>;
        };

        Base {
            bindings = <&to 0>;
            key-positions = <32 33>;
            layers = <3>;
        };

        Select_All {
            bindings = <&kp LC(A)>;
            key-positions = <0 1>;
            layers = <0 3>;
        };

        CapsL {
            bindings = <&kp CLCK>;
            key-positions = <23 31>;
            layers = <0>;
        };

        Alt_F4 {
            bindings = <&kp LA(F4)>;
            key-positions = <13 12>;
            layers = <1>;
        };

        RH.Lclick {
            bindings = <&mkp LCLK>;
            key-positions = <26 27>;
            layers = <0 3>;
        };

        RH.Rclick {
            bindings = <&mkp RCLK>;
            key-positions = <27 28>;
            layers = <0 3>;
        };

        RH.Mclick {
            bindings = <&mkp MCLK>;
            key-positions = <26 27 28>;
            layers = <0 3>;
        };

        MOU.Ret {
            bindings = <&kp RET>;
            key-positions = <22 22 23>;
            layers = <4>;
        };

        MOU.Ret.RH {
            bindings = <&kp RET>;
            key-positions = <26 27>;
            layers = <4 1>;
        };

        colon {
            bindings = <&kp SEMI>;
            key-positions = <18 19>;
            layers = <0>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <1>;
        };

        Undo {
            bindings = <&kp LC(Z)>;
            key-positions = <20 21>;
            layers = <0>;
        };
    };

    behaviors {
        sf_shift: sf_shift {
            compatible = "zmk,behavior-sticky-key";
            label = "SF_SHIFT";
            bindings = <&sk>;
            #binding-cells = <1>;
            release-after-ms = <700>;
            quick-release;
        };

        layer_switch: layer_switch {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_SWITCH";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-trigger-key-positions = <30>;
            flavor = "hold-preferred";
            hold-trigger-on-release;
        };

        med_mt: med_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "MED_MT";
            bindings = <&kp>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <20 21>;
        };

        mse_scroll: mse_scroll {
            compatible = "zmk,behavior-hold-tap";
            label = "MSE_SCROLL";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "hold-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <20 29>;
        };
    };

    behaviors {
    };

    behaviors {
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp Q               &kp W           &kp E              &kp R             &kp T        &mt DEL Y       &kp U              &kp I            &kp O            &kp P
&mt LEFT_CONTROL A  &mt LEFT_GUI S  &mt LEFT_ALT D     &mt LEFT_SHIFT F  &lt 6 G      &mt HOME H      &mt RIGHT_SHIFT J  &mt RIGHT_ALT K  &mt RIGHT_GUI L  &mt LEFT_CONTROL APOS
&lt 4 Z             &mt LC(X) X     &mt LC(C) C        &mt LC(V) V       &kp B        &mt END N       &kp M              &kp COMMA        &kp DOT          &lt 4 SLASH
                                    &layer_switch 4 4  &lt 1 BACKSPACE   &lt 7 TAB    &mt ESCAPE RET  &lt 2 SPACE
            >;

            label = "BSE";
        };

        LOWER {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3     &kp NUMBER_4       &kp N5     &kp NUMBER_6       &kp N7             &kp N8           &kp N9  &kp N0
&mt LCTRL F1  &kp F2        &mt LEFT_ALT F3  &mt LEFT_SHIFT F4  &kp F5     &kp F6             &mt LEFT_SHIFT F7  &mt LEFT_ALT F8  &kp F9  &mt LCTRL F10
&kp SLASH     &kp STAR      &kp MINUS        &kp PLUS           &kp F11    &kp F12            &kp COLON          &trans           &trans  &mt PAUSE_BREAK MINUS
                            &trans           &trans             &trans     &mt RET BACKSPACE  &kp SPACE
            >;

            label = "LWR";
        };

        RAISE {
            bindings = <
&kp EXCL   &kp AT      &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET    &kp RIGHT_PARENTHESIS   &kp PERCENT               &kp EQUAL
&kp LCTRL  &kp DOLLAR  &kp UNDER             &kp LSHFT         &kp ASTRK         &kp PAGE_UP      &mt RSHFT LEFT       &mt RIGHT_ALT UP_ARROW  &mt RIGHT_GUI DOWN_ARROW  &mt RCTRL RIGHT
&kp POUND  &kp CARET   &kp PLUS              &kp AMPS          &kp PIPE          &kp PAGE_DOWN    &kp LA(PRINTSCREEN)  &none                   &kp TILDE                 &mt PAUSE_BREAK QUESTION
                       &key_repeat           &trans            &trans            &trans           &trans
            >;

            label = "RSE";
        };

        CHANGE {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp N7     &kp N8        &kp N9    &kp N0
&kp LCTRL     &kp LEFT_GUI  &kp LEFT_ALT  &kp LSHFT     &lt 6 HOME     &kp DEL       &kp LEFT   &kp UP_ARROW  &kp DOWN  &kp RIGHT
&kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp END        &none         &kp COLON  &kp MINUS     &trans    &trans
                            &lt 4 ESCAPE  &trans        &mt RET TAB    &trans        &trans
            >;

            label = "CHG";
        };

        MOUSE {
            bindings = <
&kp LC(A)         &kp LC(W)     &kp LC(E)     &kp LC(R)       &kp LC(T)    &none      &none      &none         &none     &none
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &mo 6        &tog 6     &kp LEFT   &kp UP_ARROW  &kp DOWN  &kp RIGHT
&trans            &mo 5         &mkp MB4      &mkp MCLK       &none        &none      &mkp MCLK  &mkp MB4      &mo 5     &trans
                                &to 0         &mkp LCLK       &mkp RCLK    &mkp RCLK  &mkp LCLK
            >;

            label = "MSE";
        };

        SNP {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans    &trans  &trans
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &tog 4  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans    &trans  &trans
            >;
        };

        MEDIA {
            bindings = <
&trans      &trans        &trans        &trans            &trans    &trans  &trans    &trans        &trans    &trans
&kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE  &trans    &trans  &kp LEFT  &kp UP_ARROW  &kp DOWN  &kp RIGHT
&trans      &trans        &kp C_PREV    &kp C_NEXT        &trans    &trans  &trans    &trans        &trans    &trans
                          &trans        &trans            &trans    &trans  &trans
            >;

            label = "MED";
        };

        SETTINGS {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &ext_power EP_TOG  &out OUT_TOG  &trans  &trans  &bt BT_CLR
&trans        &trans        &trans        &trans        &trans          &trans             &trans        &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans          &trans             &trans        &trans  &trans  &bt BT_CLR_ALL
                            &trans        &trans        &trans          &trans             &trans
            >;

            label = "SET";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Settings {
            if-layers = <1 2>;
            then-layer = <8>;
        };
    };
};
